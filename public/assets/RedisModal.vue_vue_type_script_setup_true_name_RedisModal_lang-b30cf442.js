import{bD as r,a as p,H as R,o as C,c as T,w as s,e as o,u as a,b as u,af as w,ag as F}from"./index-4a8cc517.js";import{L as d}from"./index-c46bc826.js";import"./index-4af91251.js";import{u as v,B as K}from"./index-b6b4562f.js";import{u as M,a as B}from"./useForm-f3f06b26.js";import"./index-1ec106fd.js";import{u as m}from"./useRender-3355e2aa.js";import{D as L}from"./dict-9afd743e.js";const j=[{label:"Redis版本",field:"redis_version"},{label:"运行模式",field:"redis_mode",render:e=>e==="standalone"?"单机":"集群"},{label:"端口",field:"tcp_port"},{label:"客户端数",field:"connected_clients"},{label:"运行时间(天)",field:"uptime_in_days"},{label:"使用内存",field:"used_memory_human"},{label:"使用CPU",field:"tcp_port",render:e=>parseFloat(e).toFixed(2)},{label:"内存配置",field:"maxmemory_human"},{label:"AOF是否开启",field:"maxmemory_human",render:e=>e==="0"?"否":"是"},{label:"RDB是否成功",field:"rdb_last_bgsave_status"},{label:"Key数量",field:"expired_keys"},{label:"网络入口/出口",field:"instantaneous_input_kbps",render:(e,n)=>n.instantaneous_input_kbps+"kps / "+n.instantaneous_output_kbps+"kps"}],q=[{title:"Key 模板",dataIndex:"keyTemplate",width:200},{title:"Key 类型",dataIndex:"keyType",width:100},{title:"Value 类型",dataIndex:"valueType",width:300},{title:"超时类型",dataIndex:"timeoutType",width:180,customRender:({text:e})=>m.renderDict(e,L.INFRA_REDIS_TIMEOUT_TYPE)},{title:"超时时间",dataIndex:"timeout",width:100,customRender:({text:e})=>m.renderText(e===0?0:e/1e3,"秒")}],P=[{label:"缓存键名",field:"cacheForm.key",dynamicDisabled:!0,component:"Input"},{label:"缓存内容",field:"cacheForm.value",dynamicDisabled:!0,component:"InputTextArea"}];function z(){return r.get({url:"/infra/redis/get-monitor-info"})}function J(){return r.get({url:"/infra/redis/get-key-define-list"})}function f(e){return r.get({url:"/infra/redis/get-key-list",params:{keyTemplate:e}})}function S(e){return r.delete({url:"/infra/redis/delete-key?key="+e})}const V=["onClick"],A=["onClick"],E=p({name:"RedisModal"}),Q=p({...E,setup(e){const n=d.Item,_=d.Item.Meta,c=R([]),[b,{setFieldsValue:y,resetFields:h}]=M({labelWidth:120,baseColProps:{span:24},schemas:P,showActionButtonGroup:!1,actionColOptions:{span:23}}),[g,{setModalProps:k}]=v(async t=>{h(),k({confirmLoading:!1});const i=await f(t.record);c.value=i});async function I(t){const i=await f(t);y({...i})}function x(t){S(t)}return(t,i)=>(C(),T(a(K),F(t.$attrs,{onRegister:a(g),title:"缓存模块"}),{default:s(()=>[o(a(d),{"data-source":c.value},{renderItem:s(({item:l})=>[o(a(n),null,{default:s(()=>[o(a(_),null,{title:s(()=>[u("a",{onClick:D=>I(l)},w(l),9,V)]),actions:s(()=>[u("a",{onClick:D=>x(l)},"删除",8,A)]),_:2},1024)]),_:2},1024)]),_:1},8,["data-source"]),o(a(B),{onRegister:a(b)},null,8,["onRegister"])]),_:1},16,["onRegister"]))}});export{Q as _,z as a,j as b,J as g,q as t};
